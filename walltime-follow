#!/usr/bin/env node

'use strict';
const program = require('commander');

const btc = require('bitcore-lib');
const common = require('./common');

program
    .option('-t, --testnet', 'use testnet')
    .option('-j, --json', 'return in json format')
    .option('-v, --verbose', 'verbose mode')
    .parse(process.argv);

if (program.args.length != 1) {
    if (program.json) {
        console.log(JSON.stringify({'error': true}));
    } else {
        console.error('Invalid number of arguments.');
    }
} else {
    var nonce = program.args.pop();

    var network;

    if (program.testnet) {
        network = btc.Networks.testnet;
    } else {
        network = btc.Networks.livenet;
    }

    if (program.verbose) {
        console.log('Retrieving endpoint information...');
    }

    var errorFn = (error => {
        if (program.verbose) {
            console.error('ERROR:', error);
        }

        if (program.json) {
            console.log(JSON.stringify({'error': true}));
        }
    });

    var globalResult;

    common.apiInfo(program.testnet).then(result => {
        globalResult = result;

        if (program.verbose) {
            process.stdout.write('Following the rabbit');
        }

        return common.followTheRabbit(globalResult.responsePrefix + nonce, program.verbose);
    }).then(a => {
        if (program.verbose) {
            console.log();
        }

        console.log(a);
    }).catch(errorFn);
}